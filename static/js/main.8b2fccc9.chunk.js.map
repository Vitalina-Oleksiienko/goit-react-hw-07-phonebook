{"version":3,"sources":["components/contacts.module.css","redux/selectors.js","redux/operations.js","components/Form.js","components/ContactList.js","redux/action.js","components/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","getContact","state","contacts","contact","getFilteredContacts","createSelector","filter","items","el","name","toLowerCase","includes","axios","defaults","baseURL","getThunkData","createAsyncThunk","_","a","rejectWithValue","get","data","message","addThunkData","post","deleteThunkData","contactId","delete","id","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChangeInput","e","target","value","className","style","form","onSubmit","preventDefault","find","alert","input","autoComplete","type","pattern","title","required","onChange","btn","ContactList","filterContacts","useEffect","list","map","listItem","phone","btnDelete","onClick","changeFilter","createAction","Filter","htmlFor","label","App","contactSlice","createSlice","initialState","loading","error","extraReducers","pending","action","fulfilled","payload","rejected","filterReducer","createReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b2fccc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"contacts_title__1keJy\",\"form\":\"contacts_form__3DBN5\",\"input\":\"contacts_input__21J5o\",\"btn\":\"contacts_btn__2XcfS\",\"btnDelete\":\"contacts_btnDelete__1BAyb\",\"list\":\"contacts_list__iN_k8\",\"label\":\"contacts_label__3IxJl\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContact = (state) => state.contacts.contact;\nexport const getFilter = (state) => state.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContact, getFilter],\n  (items, filter) =>\n    items.filter((el) => el.name.toLowerCase().includes(filter.toLowerCase()))\n);\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://619b5c172782760017445539.mockapi.io\";\n\nexport const getThunkData = createAsyncThunk(\n  \"getContact\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const addThunkData = createAsyncThunk(\n  \"addContact\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/contacts\", contact);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const deleteThunkData = createAsyncThunk(\n  \"deleteContact\",\n  async (contactId, { rejectWithValue }) => {\n    try {\n      const {\n        data: { id },\n      } = await axios.delete(`/contacts/${contactId}`);\n      return id;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n","import React, { useState } from \"react\";\n\nimport style from \"./contacts.module.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContact } from \"../redux/selectors\";\nimport { addThunkData } from \"../redux/operations\";\n\nexport default function Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const handleChangeInput = (e) => {\n    if (e.target.name === \"name\") {\n      setName(e.target.value);\n    } else if (e.target.name === \"number\") {\n      setNumber(e.target.value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addThunkData({ name, number }));\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  return (\n    <>\n      <form className={style.form} onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input\n          className={style.input}\n          value={name}\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeInput}\n        />\n        <label>Number</label>\n        <input\n          className={style.input}\n          value={number}\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeInput}\n        />\n        <button type=\"submit\" className={style.btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport style from \"./contacts.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilteredContacts } from \"../redux/selectors\";\nimport { getThunkData, deleteThunkData } from \"../redux/operations\";\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(getFilteredContacts);\n\n  useEffect(() => {\n    dispatch(getThunkData());\n  }, [dispatch]);\n\n  return (\n    <ul className={style.list}>\n      {filterContacts.map((el) => (\n        <li className={style.listItem} key={el.id}>\n          {el.name}: {el.phone}\n          <button\n            type=\"button\"\n            className={style.btnDelete}\n            id={el.id}\n            onClick={() => dispatch(deleteThunkData(el.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"changeFilter\");\n","import React from \"react\";\nimport style from \"./contacts.module.css\";\n\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../redux/action\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label htmlFor=\"find\" className={style.label}>\n        Find contacts by name\n      </label>\n      <input\n        className={style.input}\n        autoComplete=\"off\"\n        id=\"find\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]\"\n        onChange={(e) => {\n          e.preventDefault();\n          dispatch(changeFilter(e.target.value.toLowerCase()));\n        }}\n      ></input>\n    </>\n  );\n}\n","import \"./App.css\";\nimport style from \"./components/contacts.module.css\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1 className={style.title}>Phonebook</h1>\n      <Form />\n      <h2 className={style.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { createReducer, createSlice } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./action\";\nimport { getThunkData, addThunkData, deleteThunkData } from \"./operations\";\n\nconst contactSlice = createSlice({\n  name: \"phonebook\",\n  initialState: {\n    contact: [],\n    loading: false,\n    error: null,\n  },\n  extraReducers: {\n    [getThunkData.pending]: (state, action) => ({\n      ...state,\n      loading: true,\n    }),\n    [getThunkData.fulfilled]: (state, action) => ({\n      ...state,\n      contact: action.payload,\n      loading: false,\n    }),\n    [getThunkData.rejected]: (state, action) => ({\n      ...state,\n      loading: false,\n      error: action.payload,\n    }),\n    [addThunkData.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [addThunkData.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        contact: [...state.contact, action.payload],\n        loading: false,\n      };\n    },\n    [addThunkData.rejected]: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    },\n    [deleteThunkData.pending]: (state, action) => ({\n      ...state,\n      loading: true,\n    }),\n    [deleteThunkData.fulfilled]: (state, action) => ({\n      ...state,\n      contact: state.contact.filter(({ id }) => id !== action.payload),\n      loading: false,\n    }),\n    [deleteThunkData.rejected]: (state, action) => ({\n      ...state,\n      loading: false,\n      error: action.payload,\n    }),\n  },\n});\nexport default contactSlice.reducer;\n\nexport const filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactSlice, { filterReducer } from \"./reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactSlice,\n    filter: filterReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}